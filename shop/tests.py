from django.test import TestCase
from django.db.models.signals import pre_save
from django.core.files.uploadedfile import SimpleUploadedFile

import re, glob, os

from .models import Goods, Categories


class GoodAndCategoryModelTest(TestCase):
    def setUp(self):
        self.category = Categories.objects.create(title='Test category')
        image = SimpleUploadedFile(
            name='test_image.jpg',
            content=b'\x47\x49\x46\x38\x39\x61',
            content_type='image/gif',
        )
        self.good = Goods.objects.create(title='Test good', description='This is test good', com_qty=500, sel_qty=500, price=500.00, image=image, category=self.category, cropping='1x1').full_clean()

    def test_create_category(self):
        category = Categories.objects.get(title='Test category')
        self.assertEqual(str(category), category.title)

    def test_create_good_and_connection_category(self):
        good = Goods.objects.get(title='Test good')

        expected = {
            'title': 'Test good',
            'description': 'This is test good',
            'com_qty': 500,
            'sel_qty': 500,
            'price': 500.00,
            'category': self.category,
        }
        for field, value in expected.items():
            self.assertEqual(getattr(good, field), value)
        
        self.assertIn('test_image', good.image.name)
        self.assertEqual(str(good), good.title)
        
        goods_in_category = self.category.goods_set.all()
        self.assertIn(good, goods_in_category)
        self.assertEqual(goods_in_category.count(), 1)

        self.assertTrue(os.path.isfile(good.image.path), msg="–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–µ")

        url = os.path.splitext(re.sub(r'_[A-Za-z0-9]+(?=\.)', '', good.image.path))[0]
        good.delete()
        for img in glob.glob(url+'*'):
            self.assertFalse(os.path.isfile(img), msg="–§–∞–π–ª –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –≤–∏–¥–∞–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ")



# ‚úÖ 1. –¢–µ—Å—Ç–∏ –º–æ–¥–µ–ª–µ–π
# üîπ –¢–∏ –≤–∂–µ –∑—Ä–æ–±–∏–≤:

#  –¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
#  –¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
#  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ __str__ –º–µ—Ç–æ–¥—ñ–≤ (str(good) == good.title)
#  –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫—ñ–ª—å–∫–æ—Å—Ç–µ–π (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, sel_qty <= com_qty)
#  –ó–≤‚Äô—è–∑–æ–∫ –º—ñ–∂ —Ç–æ–≤–∞—Ä–∞–º–∏ —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
#  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è

# ‚úÖ 2. –¢–µ—Å—Ç–∏ —Ñ–æ—Ä–º (forms)
#  –¢–µ—Å—Ç –Ω–∞ –≤–∞–ª—ñ–¥–Ω—É —Ñ–æ—Ä–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É

#  –¢–µ—Å—Ç –Ω–∞ –Ω–µ–≤–∞–ª—ñ–¥–Ω—É —Ñ–æ—Ä–º—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, price <= 0, –≤—ñ–¥—Å—É—Ç–Ω—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è)

#  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤

# ‚úÖ 3. –¢–µ—Å—Ç–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—å (views)
#  –°—Ç–æ—Ä—ñ–Ω–∫–∞ —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤ (—á–∏ –≤—ñ–¥–¥–∞—î —Å—Ç–∞—Ç—É—Å 200 —ñ –º—ñ—Å—Ç–∏—Ç—å —Ç–æ–≤–∞—Ä)

#  –°—Ç–æ—Ä—ñ–Ω–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä—É (—á–∏ –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è)

#  –ü–æ—à—É–∫ —Ç–æ–≤–∞—Ä—ñ–≤ (?find=–Ω–∞–∑–≤–∞)

#  –§—ñ–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º (?cate=1)

#  –ü–æ–º–∏–ª–∫–∏ 404 –¥–ª—è –Ω–µ—ñ—Å–Ω—É—é—á–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤/–∫–∞—Ç–µ–≥–æ—Ä—ñ–π

#  –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É (POST-–∑–∞–ø–∏—Ç)

#  –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É (–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è)

#  –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É

# ‚úÖ 4. –¢–µ—Å—Ç–∏ URL'—ñ–≤
#  –ß–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ —à–ª—è—Ö–∏ –≤–µ–¥—É—Ç—å –¥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö view

#  –ß–∏ –º–æ–∂–Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ reverse('shop:product_detail', args=[product.pk])

# ‚úÖ 5. –¢–µ—Å—Ç–∏ —à–∞–±–ª–æ–Ω—ñ–≤ (templates)
#  –¢–µ—Å—Ç —á–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–∞–±–ª–æ–Ω

#  –¢–µ—Å—Ç —á–∏ –≤–∏–≤–æ–¥–∏—Ç—å—Å—è –ø–æ—Ç—Ä—ñ–±–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤ —à–∞–±–ª–æ–Ω—ñ

#  –ß–∏ —î –∫–Ω–æ–ø–∫–∏, –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –ø–æ—Å–∏–ª–∞–Ω–Ω—è

# ‚úÖ 6. –¢–µ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —Ç–∞ –¥–æ—Å—Ç—É–ø—É
#  –¢–µ—Å—Ç —á–∏ –º–æ–∂–Ω–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–æ–≤–∞—Ä —Ç—ñ–ª—å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É

#  –¢–µ—Å—Ç —á–∏ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è/—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è

#  –¢–µ—Å—Ç —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó/–≤—Ö–æ–¥—É

# ‚úÖ 7. –¢–µ—Å—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (—è–∫—â–æ –≤–∂–µ —î)
#  –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è

#  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—ñ–≤: –Ω–æ–≤–∏–π, –≤ —Ä–æ–±–æ—Ç—ñ, –≤–∏–∫–æ–Ω–∞–Ω–æ, —Å–∫–∞—Å–æ–≤–∞–Ω–æ

#  –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫

#  –ó–º–µ–Ω—à–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ com_qty –ø—ñ—Å–ª—è –ø–æ–∫—É–ø–∫–∏

# ‚úÖ 8. –¢–µ—Å—Ç–∏ API (—è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à DRF –∞–±–æ —ñ–Ω—à–µ)
#  GET —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤

#  POST —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä—É (—Ç—ñ–ª—å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ)

#  PUT/PATCH —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è

#  DELETE —Ç–æ–≤–∞—Ä—É

# ‚úÖ 9. –¢–µ—Å—Ç–∏ –±–µ–∑–ø–µ–∫–∏
#  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –¥—ñ–π (—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –Ω–µ —Ç–≤–æ—ó–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º)

#  XSS –≤ –Ω–∞–∑–≤–∞—Ö —Ç–æ–≤–∞—Ä—É (–ø—Ä–∏ –≤–∏–≤–µ–¥–µ–Ω–Ω—ñ)

# üéÅ –ë–æ–Ω—É—Å: –¢–µ—Å—Ç–∏ –ø–æ—à—Ç–∏ / –æ–ø–ª–∞—Ç–∏ (–æ–ø—Ü—ñ–π–Ω–æ)
#  –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ª–∏—Å—Ç–∞ –ø—ñ—Å–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è

#  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–±—Ä–æ–±–∫–∏ –æ–ø–ª–∞—Ç–∏ (—è–∫—â–æ —î)





# –©–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–±–æ –ø–æ–∫—Ä–∞—â–∏—Ç–∏:
# 1. üß± –ù–∞–∑–≤–∏ –º–æ–¥–µ–ª–µ–π, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ Goods
# –Ø–∫—â–æ –≤ —Ç–µ–±–µ —î –º–æ–¥–µ–ª—å Goods ‚Äî –∫—Ä–∞—â–µ –Ω–∞–∑–≤–∞—Ç–∏ —ó—ó Good (–≤ –æ–¥–Ω–∏–Ω—ñ).

# Django —Å–∞–º —Å—Ç–≤–æ—Ä—é—î —Ç–∞–±–ª–∏—Ü—é goods, —Ü–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç.

# 4. üìù README.md ‚Äî –≤—ñ–¥—Å—É—Ç–Ω—ñ–π
# –û–±–æ–≤'—è–∑–∫–æ–≤–æ –¥–æ–¥–∞–π —Ñ–∞–π–ª README.md:


# 5. üîê –°–µ–∫—Ä–µ—Ç–∏ –≤ settings.py
# –Ø–∫—â–æ –≤ settings.py —î SECRET_KEY, –∫—Ä–∞—â–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤ .env —Ñ–∞–π–ª.

# –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É python-decouple –∞–±–æ dotenv.

# python
# –ö–æ–ø—ñ—é–≤–∞—Ç–∏
# –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
# # settings.py
# from decouple import config
# SECRET_KEY = config("SECRET_KEY")